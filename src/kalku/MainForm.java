
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package kalku;

import java.awt.*;
import java.awt.geom.*;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JOptionPane;


/**
 *
 * @author Andre
 */
public class MainForm extends javax.swing.JFrame {

    /**
     * Creates new form MainForm
     */
    
    private MatrixTSP mat;
    private MatrixTSP mat_t;
    private int solusi[];
    private long exectime;
    private int totPul;
    
    public MainForm() {
        initComponents();
        jFileChooser1.setFileFilter(new ExtensionFileFilter("File Teks Matrix Graph", "TXT"));
        jButton1.setVisible(false);
    }
    
    private int cur = 0;
    
    private boolean okDraw = false;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jFileChooser1 = new javax.swing.JFileChooser();
        label1 = new java.awt.Label();
        jMenuBar1 = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tugas Kecil Stima 3");
        setIconImages(null);

        jButton1.setText("Proses dan Gambar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jFileChooser1.setFileFilter(null);
        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });

        label1.setText("Anda belum memilih file.");
        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jFileChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 1257, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(label1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 902, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        File file = new File(jFileChooser1.getSelectedFile().getAbsolutePath());
        BufferedReader reader = null;
        String ibuff[];
        int size, i, j;
        
        try {
            reader = new BufferedReader(new FileReader(file));
            String text = null;
            text = reader.readLine();
            
            if (text != null) {
                ibuff = text.split(" ");
                size = ibuff.length;
                
                mat = new MatrixTSP(size);
                mat_t = new MatrixTSP(size);
                for(i=0; i<size; i++){
                    for(j=0; j<size; j++){
                        mat.setData(i,j,Integer.parseInt(ibuff[j]));
                        mat_t.setData(i,j,Integer.parseInt(ibuff[j]));
                    }
                    text = reader.readLine();
                    if (text != null)
                        ibuff = text.split(" ");
                }
                long start = System.nanoTime();
                solusi = TSP(mat_t);
                exectime = System.nanoTime() - start;
                okDraw = true;
                draw();
            }
            
            
        } catch (FileNotFoundException e) {
            JOptionPane.showMessageDialog(null, "File tidak ditemukan : " + jFileChooser1.getSelectedFile().getAbsolutePath(), "Error", JOptionPane.ERROR_MESSAGE);
            //e.printStackTrace();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Ada Error IO", "Error", JOptionPane.ERROR_MESSAGE);
            //e.printStackTrace();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
            //e.printStackTrace();
        } finally {
            try {
                if (reader != null) {
                    reader.close();
                }
            } catch (IOException e) {
            }
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
        // TODO add your handling code here:
        
        jFileChooser1.setVisible(false);
        jButton1.setVisible(true);
        label1.setText(jFileChooser1.getSelectedFile().getAbsolutePath());
        
    }//GEN-LAST:event_jFileChooser1ActionPerformed

    /**
     * @param args the command line arguments
     */
   
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }
    

    @Override
    public void paint(Graphics g) {
       super.paint(g);
       
       draw();
    }
    
    public int[] TSP(MatrixTSP in){
        MatrixTSP tmp;
        Tupel tup;
        int kurkur;
        int level = 0;
        
        totPul = 0;
        QueueCost pq = new QueueCost();
        boolean cari;
        int baseCost;
        int cp = 0;
        int i, k;
        
        int a[] = new int[in.getSize() + 1];
        
        in.reduce();
        baseCost = in.getPengurang();
        for (i=1; i<in.getSize(); i++){
            if (in.getData(0, i) != -999){
                tmp = in.getNewMat(0, i);
                tmp.reduce();
                kurkur = tmp.getPengurang();
                pq.insert(tmp, baseCost + in.getData(0, i) + kurkur, i, level+1);
                totPul++;
            }
            
        }
               
        a[level] = 1;
        cari = true;
        
        while (pq.notnull() && cari){
            tup = pq.pop();
            tmp = tup.mat;
            baseCost = tup.cost;
            cp = tup.cp;
            level = tup.level;
            a[level] = cp + 1;
            
            if (level == in.getSize()){
                cari = false;
            }else{
                
                for (i=0; i<in.getSize(); i++){
                    if (tmp.getData(cp, i) != -999){
                        in = tmp.getNewMat(cp, i);
                        in.reduce();
                        kurkur = in.getPengurang();
                        pq.insert(in, baseCost + tmp.getData(cp, i) + kurkur, i, level+1);
                        totPul++;
                        int angka = baseCost + tmp.getData(cp, i) + kurkur;
                    }


                }
            
            }
        }
        
        return a;
    }
    
    private void draw(){
        if (!okDraw) return;
        
        int posX[], posY[];
        int jum, i, j, totJarak;
        float sudut;
        Ellipse2D ling[];
        Path2D path[];
        double s_sudut;
        
        
        jum = mat.getSize();
        sudut = 360 / jum;
        
        posX = new int[jum];
        posY = new int[jum];
        
        
        ling = new Ellipse2D[jum];
        
        Graphics2D g2 = (Graphics2D) this.getGraphics();
        
        RenderingHints rh = new RenderingHints(
                RenderingHints.KEY_RENDERING,
                RenderingHints.VALUE_RENDER_QUALITY);
        g2.setRenderingHints(rh);
        
        
        for (i=0;i<jum;i++){
            posX[i] = (int)(750 - (float)Math.cos(i*sudut*3.14/180) * 400);
            posY[i] = (int)(460 + (float)Math.sin(i*sudut*3.14/180) * 400);
            ling[i] = new Ellipse2D.Float(posX[i] - 15, posY[i] - 15, 30, 30);
        }
        
        
        g2.setColor(Color.BLACK);
        for(i=0;i<jum;i++){
            for(j=0;j<jum;j++){
                if (mat.getData(i, j) != -999){
                    
                    if (mat.getData(i, j) == mat.getData(j, i)){
                        if (j>i){
                            if (sisiSolusi(i,j) || sisiSolusi(j,i)){
                                g2.setStroke(new BasicStroke(1.5f,BasicStroke.CAP_ROUND, BasicStroke.JOIN_ROUND));
                                g2.setColor(Color.BLUE);
                            }else{
                                g2.setStroke(new BasicStroke(1f,BasicStroke.CAP_ROUND, BasicStroke.JOIN_ROUND));
                                g2.setColor(Color.BLACK);
                            }
                            drawArrow(g2, posX[i], posY[i], posX[j], posY[j], mat.getData(i, j), false);
                        }
                    }else{
                        if (sisiSolusi(i,j)){
                            g2.setStroke(new BasicStroke(1.5f,BasicStroke.CAP_ROUND, BasicStroke.JOIN_ROUND));
                            g2.setColor(Color.BLUE);
                        }else{
                            g2.setStroke(new BasicStroke(1f,BasicStroke.CAP_ROUND, BasicStroke.JOIN_ROUND));
                            g2.setColor(Color.BLACK);
                        }
                        drawArrow(g2, posX[i], posY[i], posX[j], posY[j], mat.getData(i, j), true);
                    }
                }
            }
        }
        
        
        g2.setColor(Color.RED);
        g2.setStroke(new BasicStroke(2f,BasicStroke.CAP_ROUND, BasicStroke.JOIN_ROUND));
        
        for(i=0;i<jum;i++)
            g2.fill(ling[i]);
        
        
        g2.setColor(Color.WHITE);
        g2.setFont(new Font("Courier New", Font.BOLD, 16));
        for(i=0;i<jum;i++){
            if(i+1>9)
                g2.drawString((i + 1) + "", posX[i]-9, posY[i]+4);
            else
                g2.drawString((i + 1) + "", posX[i]-4, posY[i]+4);
        }
        
        g2.setColor(Color.BLACK);
        g2.setFont(new Font("Courier New", Font.BOLD, 14));
        StringBuilder toPrint = new StringBuilder();
        g2.drawString("BRANCH AND BOUND TSP", 10, 40);
        g2.drawString("-----------------------------", 10, 54);
        g2.drawString("Tur Terpendek      :", 10, 68);
        
        toPrint.append(solusi[0]);
        for (i=1;i<=jum;i++){
            toPrint.append(" --> ");
            toPrint.append(solusi[i]);
        }
        
        g2.drawString(toPrint.toString(), 10, 82);
        
        totJarak = 0;
        for(i=0; i<jum; i++){
            totJarak += mat.getData(solusi[i]-1, solusi[i+1]-1);
        }
        
        g2.drawString("Jarak Terpendek    :  " + totJarak, 10, 110);
        g2.drawString("Waktu Eksekusi     :  " + exectime/1000000f + " ms", 10, 124);
        g2.drawString("Jumlah Simpul Pohon:  " + totPul, 10, 138);
        
        g2.drawString("          Dibuat Oleh:" , 10, 438);
        g2.drawString("--------------------------------" , 10, 452);
        g2.drawString("   Andre Susanto - 135 12 028" , 10, 466);
        
        
        g2.dispose();
        
        
    }
    
    private boolean sisiSolusi(int s1, int s2){
        int i;
        int jum;
        
        jum = mat.getSize();
        
        for (i=0;i<jum;i++){
            if (solusi[i] == s1 + 1 && solusi[i+1] == s2 + 1)
                return true;
        }
        return false;
    }
    
    void drawArrow(Graphics2D g, int x1, int y1, int x2, int y2, int val, boolean Curv) {
        
        double dx = x2 - x1, dy = y2 - y1;
        double angle = Math.atan2(dy, dx);
        Path2D patty = new Path2D.Double();
        
        int len = (int) Math.sqrt(dx*dx + dy*dy);
        AffineTransform ab = g.getTransform();
        AffineTransform at = AffineTransform.getTranslateInstance(x1, y1);
        at.concatenate(AffineTransform.getRotateInstance(angle));
        g.transform(at);

        if (Curv){
            patty.moveTo(0, 0);
            patty.curveTo(0, 0, len/2, 50, len, 0);
            g.draw(patty);
            
            g.translate(0, 22);
            g.fillPolygon(new int[] {len/2+4, len/2-4, len/2-4, len/2+4},
                          new int[] {0, -4, 4, 0}, 4);
            
            
        }else{
            g.drawLine(0, 0, len, 0);
            
            
        }
        g.setFont(new Font("Arial", Font.BOLD, 14));

        g.drawString(val + "", len/2 + 6, 13);
        g.setTransform(ab);
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JMenuBar jMenuBar1;
    private java.awt.Label label1;
    // End of variables declaration//GEN-END:variables
}
